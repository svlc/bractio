++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ Replay-Actions-Per-Minute Library (librapm)		   		       +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

PURPOSE:
Library inspects WarCraft III replay file and obtains all usefull info -- e.g.
game release version, replay length, game joiners, APM (Actions Per Minute)
of every player, ...
--------------------------------------------------------------------------------
VERSION:
Alfa -- library is planned to have stable API in ~ 07/2013.
--------------------------------------------------------------------------------
BUG REPORTING:
It is meaningless to report any bugs right now, however some advice about
library design and similar stuff is welcome.
--------------------------------------------------------------------------------
USAGE:
After "make" command (zlib is required), library gets compiled with "src/main.c"
source file. The binary should show up in "bin" directory. To see usage, run the
program with "-h" option. Sample replays to demonstrate the library can be found
in "samples" directory.
--------------------------------------------------------------------------------
SAMPLES:
More replay samples can be found e.g. at:
http://www.wcg.com/6th/replay/replay.asp
--------------------------------------------------------------------------------
LICENSE:
GPLv2
--------------------------------------------------------------------------------
THANKS:
+http://zlib.net
+http://w3g.deepnode.de/files/w3g_format.txt
+http://w3g.deepnode.de/files/w3g_actions.txt
--------------------------------------------------------------------------------
FACTS:
+development is carried out on GNU/Linux
--------------------------------------------------------------------------------
DESIGN DECISIONS:
+global errno-like variable is deliberately not used (because of possible
usage of pthreads at library user's side)
+signal handling is up to the lib user, lib does not have any because its
functions return quickly enough
--------------------------------------------------------------------------------
CODING STANDARDS:
+use "1TBS" indent style (do not forget to cover body of "control flow"
keywords (e.g. for, while, if, ...) with curly brackets)
+have literal value on the left side of 'is-equal' comparison
+never put "return" statement at the end of void function
+try to keep width of every line at 80 characters
+never, under any circumstances, use C99 comments
+try to limit number of "return" statements within function (good for debugging)
--------------------------------------------------------------------------------